<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安全 on 个人笔记</title>
    <link>https://tech.lucumt.info/docs/security/</link>
    <description>Recent content in 安全 on 个人笔记</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://tech.lucumt.info/docs/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不同的身份管理方式</title>
      <link>https://tech.lucumt.info/docs/security/identity-manage-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/security/identity-manage-types/</guid>
      <description>When you login to a website, your identity needs to be managed. Here is how different solutions work:&#xA;- Session - The server stores your identity and gives the browser a session ID cookie. This allows the server to track login state. But cookies don&amp;rsquo;t work well across devices.&#xA;- Token - Your identity is encoded into a token sent to the browser. The browser sends this token on future requests for authentication.</description>
    </item>
    <item>
      <title>不同认证方式的对比</title>
      <link>https://tech.lucumt.info/docs/security/authentication-types-compare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/security/authentication-types-compare/</guid>
      <description></description>
    </item>
    <item>
      <title>Session和JWT的对比</title>
      <link>https://tech.lucumt.info/docs/security/session-vs-jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/security/session-vs-jwt/</guid>
      <description>What’s the difference between Session-based authentication and JWTs?&#xA;Here’s a simple breakdown for both approaches:&#xA;Session-Based Authentication&#xA;In this approach, you store the session information in a database or session store and hand over a session ID to the user.&#xA;Think of it like a passenger getting just the Ticket ID of their flight while all other details are stored in the airline’s database.&#xA;Here’s how it works:&#xA;1 - The user makes a login request and the frontend app sends the request to the backend server.</description>
    </item>
  </channel>
</rss>
